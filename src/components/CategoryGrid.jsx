import React from 'react';

const CategoryGrid = ({ categories, loading, error, onCategorySelect, onRefresh }) => {
  // ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
  const categoryIcons = {
    '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏ä‡πà‡πÅ‡∏Ç‡πá‡∏á ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏õ‡∏£‡∏£‡∏π‡∏õ': 'üßä',
    '‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ': 'üßΩ',
    '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏∞‡πÄ‡∏• ‡πÅ‡∏•‡∏∞‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå': 'üêü',
    '‡∏Ç‡∏≠‡∏á‡πÅ‡∏´‡πâ‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∏‡∏á': 'üå∂Ô∏è',
    '‡∏ú‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡πÑ‡∏°‡πâ': 'ü•¨'
  };

  // ‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
  const categoryColors = {
    '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏ä‡πà‡πÅ‡∏Ç‡πá‡∏á ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏õ‡∏£‡∏£‡∏π‡∏õ': { bg: 'bg-blue', text: 'text-blue' },
    '‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ': { bg: 'bg-purple', text: 'text-purple' },
    '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏∞‡πÄ‡∏• ‡πÅ‡∏•‡∏∞‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå': { bg: 'bg-pink', text: 'text-pink' },
    '‡∏Ç‡∏≠‡∏á‡πÅ‡∏´‡πâ‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∏‡∏á': { bg: 'bg-orange', text: 'text-orange' },
    '‡∏ú‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡πÑ‡∏°‡πâ': { bg: 'bg-green', text: 'text-green' }
  };

  // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• categories ‡πÄ‡∏õ‡πá‡∏ô array
  const categoryArray = Object.keys(categories).map(key => {
    const category = categories[key];
    const colors = categoryColors[key] || { bg: 'bg-gray', text: 'text-gray' };
    
    return {
      id: key,
      name: key,
      icon: categoryIcons[key] || 'üì¶',
      bgColor: colors.bg,
      textColor: colors.text,
      count: category.products.length,
      subCategories: Object.keys(category.subCategories)
    };
  });

  const totalProducts = Object.values(categories).reduce((sum, cat) => sum + cat.products.length, 0);

  if (loading) {
    return (
      <div className="category-container">
        <div style={{ textAlign: 'center', padding: '40px' }}>
          <div style={{ 
            display: 'inline-block',
            width: '40px', 
            height: '40px', 
            border: '4px solid #f3f3f3',
            borderTop: '4px solid #10b981',
            borderRadius: '50%',
            animation: 'spin 1s linear infinite'
          }}></div>
          <p style={{ marginTop: '16px', color: '#6b7280' }}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="category-container">
        <div style={{ textAlign: 'center', padding: '40px' }}>
          <div style={{ fontSize: '48px', marginBottom: '16px' }}>‚ö†Ô∏è</div>
          <h3 style={{ color: '#dc2626', marginBottom: '8px' }}>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>
          <p style={{ color: '#6b7280', marginBottom: '16px' }}>{error}</p>
          <button 
            onClick={onRefresh}
            style={{
              backgroundColor: '#10b981',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              padding: '8px 16px',
              cursor: 'pointer'
            }}
          >
            ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="category-container">
      {/* Header */}
      <div className="category-header">
        <div className="category-title-row">
          <h1 className="category-title">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>
          <div className="category-count">
            ‡∏£‡∏ß‡∏° {totalProducts} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
          </div>
        </div>
        
        {/* Search Bar */}
        <div className="search-container">
          <input
            type="text"
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
            className="search-input"
          />
          <svg className="search-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </div>
      </div>

      {/* Categories Grid */}
      <div className="categories-grid">
        {categoryArray.map((category) => (
          <button
            key={category.id}
            onClick={() => onCategorySelect && onCategorySelect(category)}
            className={`category-button ${category.bgColor}`}
          >
            <span className="category-icon">{category.icon}</span>
            <div className={`category-name ${category.textColor}`}>
              {category.name}
            </div>
            <div className="category-item-count">
              {category.count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
            </div>
            {category.subCategories.length > 0 && (
              <div className="category-subcategories">
                {category.subCategories.join(', ')}
              </div>
            )}
          </button>
        ))}
        
        {/* View All Button */}
        <button
          onClick={() => onCategorySelect && onCategorySelect({ 
            id: 'all', 
            name: '‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
            count: totalProducts 
          })}
          className="category-button bg-gray"
        >
          <span className="category-icon">üì±</span>
          <div className="category-name text-gray">
            ‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
          </div>
          <div className="category-item-count">
            ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
          </div>
        </button>
      </div>

      {/* Refresh Button */}
      <div style={{ textAlign: 'center', marginTop: '20px' }}>
        <button 
          onClick={onRefresh}
          style={{
            backgroundColor: '#f3f4f6',
            border: '1px solid #d1d5db',
            borderRadius: '8px',
            padding: '8px 16px',
            cursor: 'pointer',
            fontSize: '14px',
            color: '#374151'
          }}
        >
          üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </button>
      </div>
    </div>
  );
};

export default CategoryGrid;